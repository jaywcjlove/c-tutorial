name: CI
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - run: npm install
      - run: npm run build

      - name: Generate Contributors Images
        uses: jaywcjlove/github-action-contributors@main
        with:
          filter-author: (renovate\[bot\]|renovate-bot|dependabot\[bot\])
          output: dist/CONTRIBUTORS.svg
          avatarSize: 42

      - name: Create Tag
        id: create_tag
        uses: jaywcjlove/create-tag-action@main
        with:
          package-path: ./package.json

      - name: get tag version
        id: tag_version
        uses: jaywcjlove/changelog-generator@main

      - name: Deploy Website
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          # commit_message: ${{ github.event.head_commit.message }}
          commit_message: ${{steps.tag_version.outputs.tag}} ${{ github.event.head_commit.message }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

      - name: Generate Changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filter-author: (jaywcjlove|小弟调调™|dependabot\[bot\]|Renovate Bot)
          filter: (^[\s]+?[R|r]elease)|(^[R|r]elease)

      - name: Create Release
        uses: ncipollo/release-action@v1
        if: steps.create_tag.outputs.successful
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.create_tag.outputs.version }}
          tag: ${{ steps.create_tag.outputs.version }}
          body: |
            [![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)
            
            Documentation ${{ steps.changelog.outputs.tag }}: https://raw.githack.com/jaywcjlove/html-tutorial/${{ steps.changelog.outputs.gh-pages-short-hash }}/index.html  
            Comparing Changes: ${{ steps.changelog.outputs.compareurl }}  

            ${{ steps.changelog.outputs.changelog }}


            ## Docker

            [![Docker Image Version (latest by date)](https://img.shields.io/docker/v/wcjiang/c-tutorial?logo=docker)](https://hub.docker.com/r/wcjiang/c-tutorial)

            ```bash
            docker pull wcjiang/c-tutorial:${{steps.changelog.outputs.version}}
            ```
            
            ```bash
            docker run --name c-tutorial --rm -d -p 9883:3000 wcjiang/c-tutorial:${{steps.changelog.outputs.version}}
            # Or
            docker run --name c-tutorial -itd -p 9883:3000 wcjiang/c-tutorial:${{steps.changelog.outputs.version}}
            ```
            
            Visit the following URL in your browser
            
            ```bash
            http://localhost:9883/
            ```


      # Create Docker Image
      - name: Docker login
        if: steps.create_tag.outputs.successful
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        if: steps.create_tag.outputs.successful
        run: docker image build -t c-tutorial .

      - name: Tags & Push image
        if: steps.create_tag.outputs.successful
        run: |
          echo "outputs.tag - ${{ steps.changelog.outputs.version }}"
          docker tag c-tutorial ${{ secrets.DOCKER_USER }}/c-tutorial:${{steps.changelog.outputs.version}}
          docker tag c-tutorial ${{ secrets.DOCKER_USER }}/c-tutorial:latest
          docker push ${{ secrets.DOCKER_USER }}/c-tutorial:${{steps.changelog.outputs.version}}
          docker push ${{ secrets.DOCKER_USER }}/c-tutorial:latest

      # # Create Docker Image in GitHub
      # - name: Login to GitHub registry
      #   run: echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Build docker image
      #   run: docker build -t ghcr.io/jaywcjlove/c-tutorial:latest .

      # - name: Publish to GitHub registry
      #   run: docker push ghcr.io/jaywcjlove/c-tutorial:latest

      # - name: Tag docker image (beta) and publish to GitHub registry
      #   if: steps.create_tag.outputs.successful
      #   run: |
      #       echo "version: v${{ steps.changelog.outputs.version }}"
      #       docker tag ghcr.io/jaywcjlove/c-tutorial:latest ghcr.io/jaywcjlove/c-tutorial:${{steps.changelog.outputs.version}}
      #       docker push ghcr.io/jaywcjlove/c-tutorial:${{steps.changelog.outputs.version}}